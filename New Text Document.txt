Abstraction

Data Abstraction is the property by which only essential details is displayed to the user and the unnecessary details is hidden
Data Abstraction may also be defined as the process of identifying only the required characteristics of an object ignoring the irrelevant details.
There are situations in which we will want to define a superclass that declares the structure of a given abstraction without providing a complete implementation of every method.
That is, sometimes we will want to create a superclass that only defines a generalization form that will be shared by all of its subclasses, leaving it to each subclass to fill in the details.
In our example, Web developer, SoftwareApplication developer, Game developer all comes in the category of programmers.

Advantages of Abstraction
1.The main benefit of using an abstract class is that it allows you to group several related classes as siblings.
2.Abstraction helps to reduce the complexity of the design and implementation process of software.

Disadvantages of Abstraction
1.The main issue is loss of context. Using and over using abstractions can cause developers to cease to determine the context of use of an abstraction.
loss of context. Using and over using abstractions can cause developers to cease to determine the context of use of an abstraction.

Polymorphism

The word polymorphism means having many forms. In simple words, we can define polymorphism as the ability of a message to be displayed in more than one form.

Runtime polymorphism or Dynamic Method Dispatch is a process in which a call to an overridden method is resolved at runtime rather than compile-time.
In this process, an overridden method is called through the reference variable of a superclass. The determination of the method to be called is based on the object being referred to by the reference variable.

Compile time polymorphism: It is also known as static polymorphism. This type of polymorphism is achieved by function overloading or operator overloading.

Advantages of Polymorphism

1.Method overloading allows methods that perform similar or closely related functions to be accessed through a common name.
For example, a program performs operations on an array of numbers which can be int, float, or double type. Method overloading allows you to define three methods with the same name and different types of parameters to handle the array operations.
2.Method overloading can be implemented on constructors allowing different ways to initialize objects of a class. This enables you to define multiple constructors for handling different types of initializations.

Disadvantages of Polymorphism
1.Run time polymorphism can lead to the performance issue as machine needs to decide which method or variable to invoke so it basically degrades the performances as decisions are taken at run time.
2.Polymorphism reduces the readability of the program. One needs to identify the runtime behavior of the program to identify actual execution time.

Encapsulation

Encapsulation in Java is a mechanism of wrapping the data (variables) and code acting on the data (methods) together as a single unit. In encapsulation, the variables of a class will be hidden from other classes, and can be accessed only through the methods of their current class.
Therefore, it is also known as data hiding.

Advantages of Encapsulation

1.Encapsulation helps us in binding the data(instance variables) and the member functions(that work on the instance variables) of a class.
2.Encapsulation is also useful in hiding the data(instance variables) of a class from an illegal direct access.
3.Encapsulation also helps us to make a flexible code which is easy to change and maintain.

Disadvantages of Encapsulation

1.You canâ€™t access private date outside the class.
2.If proper encapsulation is not followed in a code, it leads to its bad designing.
